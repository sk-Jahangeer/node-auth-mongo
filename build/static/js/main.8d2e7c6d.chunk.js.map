{"version":3,"sources":["services/logService.js","services/httpService.js","services/authService.js","components/home.js","components/common/input.js","components/common/form.js","services/userService.js","components/register.js","components/notFound.js","components/login.js","assets/checked.svg","assets/warning.svg","components/common/emailResend.js","services/emailService.js","components/emailVerifyResend.js","services/resetService.js","components/resetEmailResend.js","components/emailVerify.js","components/resetEmail.js","components/resetVerify.js","components/logout.js","App.js","index.js"],"names":["logger","init","log","error","console","axios","interceptors","response","use","status","toast","Promise","reject","http","get","post","put","delete","apiEndpoint","process","REACT_APP_API_URL","tokenKey","login","email","password","Home","user","jwt","localStorage","getItem","jwtDecode","getCurrentUser","className","Fragment","style","margin","fontWeight","name","to","Button","variant","type","Input","icon","rest","Grid","container","spacing","justify","alignItems","color","item","TextField","helperText","width","Form","state","data","errors","validate","Joi","object","schema","details","path","message","validateProperty","value","obj","handleSubmit","e","preventDefault","setState","doSubmit","handleChange","input","currentTarget","errorMessage","label","required","this","onChange","Component","register","Register","string","min","max","tlds","allow","a","props","history","push","onSubmit","renderInput","renderSubmitBtn","NotFound","Login","setItem","fontSize","EmailResend","resendLink","marginTop","height","alt","src","checked","onClick","borderColor","warning","baseUrl","emailVerifyResendEndPoint","emailVerifyResend","emailVerify","userId","token","emailLinkVerify","EmailVerifyResend","useState","setErrors","match","params","result","success","resetEmailEndpoint","resetEmail","passwordReset","ResetEmailResend","EmailVerify","sucess","window","location","ResetEmail","ResetVerify","confirmPassword","Logout","removeItem","App","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d2e7c6d.chunk.js","sourcesContent":["function init() {}\r\n\r\nfunction log(error) {\r\n  console.error(error);\r\n}\r\n\r\nconst logger = {\r\n  init,\r\n  log,\r\n};\r\n\r\nexport default logger;\r\n","import axios from \"axios\";\r\nimport logger from \"./logService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status <= 500;\r\n\r\n  if (!expectedError) {\r\n    logger.log(error);\r\n    toast.error(\"An unexpected error occurred.\");\r\n  }\r\n\r\n  return Promise.reject(error);\r\n});\r\n\r\nconst http = {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n};\r\n\r\nexport default http;\r\n","import http from \"./httpService\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst apiEndpoint = process.env.REACT_APP_API_URL + \"/auth/login\";\r\nconst tokenKey = \"token\";\r\n\r\nexport function login(email, password) {\r\n  return http.post(apiEndpoint, { email, password });\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(tokenKey);\r\n    return jwtDecode(jwt);\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(tokenKey);\r\n}\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getCurrentUser } from \"../services/authService\";\r\n\r\nconst Home = () => {\r\n  const user = getCurrentUser();\r\n  return (\r\n    <div className=\"navbar flex\">\r\n      <div className=\"logo\">domain</div>\r\n      <div className=\"btns flex\">\r\n        {user && (\r\n          <React.Fragment>\r\n            <div style={{ margin: \"0 5px\", fontWeight: \"bold\" }}>\r\n              {user.name}\r\n            </div>\r\n            <Link to=\"/api/auth/logout\" className=\"remove-underline\">\r\n              <Button className=\"btn\" variant=\"outlined\" type=\"submit\">\r\n                Logout\r\n              </Button>\r\n            </Link>\r\n          </React.Fragment>\r\n        )}\r\n        {!user && (\r\n          <React.Fragment>\r\n            <Link to=\"/api/auth/login\" className=\"remove-underline\">\r\n              <Button className=\"btn\" variant=\"outlined\" type=\"submit\">\r\n                login\r\n              </Button>\r\n            </Link>\r\n            <Link to=\"/api/auth/register\" className=\"remove-underline\">\r\n              <Button className=\"btn\" variant=\"outlined\" type=\"submit\">\r\n                register\r\n              </Button>\r\n            </Link>\r\n          </React.Fragment>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nconst Input = ({ error, icon, ...rest }) => {\r\n  return (\r\n    <Grid\r\n      className=\"input-spacing\"\r\n      container\r\n      spacing={1}\r\n      justify=\"center\"\r\n      alignItems={error ? \"center\" : \"flex-end\"}\r\n    >\r\n      <Grid style={{ color: \"var(--blue)\" }} item>\r\n        {icon}\r\n      </Grid>\r\n      <Grid item>\r\n        {error ? (\r\n          <TextField\r\n            error\r\n            helperText={error}\r\n            style={{ width: \"200px\" }}\r\n            {...rest}\r\n          />\r\n        ) : (\r\n          <TextField style={{ width: \"200px\" }} {...rest} />\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { Button } from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport Input from \"./input\";\r\nimport Joi from \"joi\";\r\n\r\nclass Form extends Component {\r\n  state = { data: {}, errors: {} };\r\n\r\n  validate = () => {\r\n    const schema = Joi.object(this.schema);\r\n    const { error } = schema.validate(this.state.data);\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    console.log(error);\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = Joi.object({ [name]: this.schema[name] });\r\n    const { error } = schema.validate(obj);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderInput(name, label, icon, type = \"text\", required = true, ...rest) {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Input\r\n        value={data[name]}\r\n        onChange={this.handleChange}\r\n        label={label}\r\n        name={name}\r\n        icon={icon}\r\n        type={type}\r\n        required={required}\r\n        error={errors[name]}\r\n        {...rest}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderSubmitBtn(name) {\r\n    return (\r\n      <Button\r\n        className=\"btn\"\r\n        style={{ width: \"200px\" }}\r\n        variant=\"outlined\"\r\n        type=\"submit\"\r\n      >\r\n        {name}\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndpoint = process.env.REACT_APP_API_URL + \"/auth/register\";\r\n\r\nexport function register(user) {\r\n  return http.post(apiEndpoint, {\r\n    name: user.name,\r\n    email: user.email,\r\n    password: user.password,\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport Form from \"./common/form\";\r\nimport Joi from \"joi\";\r\nimport { register } from \"../services/userService\";\r\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\r\nimport EmailOutlinedIcon from \"@material-ui/icons/EmailOutlined\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport \"../styles/form.css\";\r\n\r\nclass Register extends Form {\r\n  state = {\r\n    data: { name: \"\", email: \"\", password: \"\" },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    name: Joi.string().min(3).max(250).required(),\r\n    email: Joi.string()\r\n      .min(3)\r\n      .max(250)\r\n      .required()\r\n      .email({ tlds: { allow: false } }),\r\n    password: Joi.string().min(3).max(1000).required(),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      await register(this.state.data);\r\n      this.props.history.push(\r\n        `/api/verify/account/resend-email/${this.state.data.email}`\r\n      );\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.email = error.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"flex flex-column\">\r\n        <h1 className=\"heading\">Register</h1>\r\n        <form\r\n          onSubmit={this.handleSubmit}\r\n          className=\"form-container flex flex-column\"\r\n        >\r\n          {this.renderInput(\r\n            \"name\",\r\n            \"Name\",\r\n            <PersonOutlineOutlinedIcon />,\r\n            \"text\",\r\n            true\r\n          )}\r\n          {this.renderInput(\r\n            \"email\",\r\n            \"Email\",\r\n            <EmailOutlinedIcon />,\r\n            \"email\",\r\n            true\r\n          )}\r\n          {this.renderInput(\r\n            \"password\",\r\n            \"Password\",\r\n            <LockOutlinedIcon />,\r\n            \"password\",\r\n            true\r\n          )}\r\n          {this.renderSubmitBtn(\"register\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","const NotFound = () => {\r\n  return <h1>404 Not Found</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport Joi from \"joi\";\r\nimport Form from \"./common/form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { login } from \"../services/authService\";\r\nimport EmailOutlinedIcon from \"@material-ui/icons/EmailOutlined\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport \"../styles/form.css\";\r\n\r\nclass Login extends Form {\r\n  state = { data: { email: \"\", password: \"\" }, errors: {} };\r\n\r\n  schema = {\r\n    email: Joi.string()\r\n      .min(3)\r\n      .max(250)\r\n      .required()\r\n      .email({ tlds: { allow: false } }),\r\n    password: Joi.string().min(3).max(1000).required(),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const { data } = this.state;\r\n      const { data: jwt } = await login(data.email, data.password);\r\n\r\n      if (jwt.message === \"verify_email\") {\r\n        return this.props.history.push(\r\n          `/api/verify/account/resend-email/${jwt.email}`\r\n        );\r\n      }\r\n\r\n      localStorage.setItem(\"token\", jwt);\r\n      this.props.history.push(\"/\");\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.email = error.response.data;\r\n        errors.password = error.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"flex flex-column\">\r\n        <h1 className=\"heading\">Login</h1>\r\n        <form\r\n          onSubmit={this.handleSubmit}\r\n          className=\"form-container flex flex-column\"\r\n        >\r\n          {this.renderInput(\r\n            \"email\",\r\n            \"Email\",\r\n            <EmailOutlinedIcon />,\r\n            \"email\",\r\n            true\r\n          )}\r\n          {this.renderInput(\r\n            \"password\",\r\n            \"Password\",\r\n            <LockOutlinedIcon />,\r\n            \"password\",\r\n            true\r\n          )}\r\n          <Link to=\"/api/verify/send-email/password-reset\">\r\n            <p\r\n              style={{\r\n                color: \"var(--blue)\",\r\n                fontSize: \"15px\",\r\n                margin: \"5px 0 5px 120px\",\r\n              }}\r\n            >\r\n              Forgot password?\r\n            </p>\r\n          </Link>\r\n          {this.renderSubmitBtn(\"Login\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","export default __webpack_public_path__ + \"static/media/checked.08385652.svg\";","export default __webpack_public_path__ + \"static/media/warning.f4935ab6.svg\";","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport checked from \"../../assets/checked.svg\";\r\nimport warning from \"../../assets/warning.svg\";\r\nimport \"../../styles/form.css\";\r\n\r\nconst EmailResend = ({ email, resendLink, errors }) => {\r\n  return (\r\n    <div style={{ marginTop: \"50px\" }} className=\"flex flex-column\">\r\n      <div\r\n        className=\"form-container flex flex-column\"\r\n        style={{ width: \"400px\", height: \"300px\" }}\r\n      >\r\n        {!errors && (\r\n          <React.Fragment>\r\n            <img\r\n              alt=\"checked\"\r\n              style={{ width: \"25%\", height: \"25%\" }}\r\n              src={checked}\r\n            />\r\n            <h5 className=\"text-center\">\r\n              A link has been sent to your email account\r\n            </h5>\r\n            <h6 className=\"text-center\" style={{ margin: \"0\" }}>\r\n              Please click on the link that has just been sent to your email\r\n              account : {email} .\r\n            </h6>\r\n            <Button\r\n              onClick={resendLink}\r\n              style={{\r\n                color: \"var(--blue)\",\r\n                borderColor: \"var(--blue)\",\r\n                width: \"200px\",\r\n                margin: \"30px 0\",\r\n              }}\r\n              variant=\"outlined\"\r\n            >\r\n              resend link\r\n            </Button>\r\n          </React.Fragment>\r\n        )}\r\n        {errors && (\r\n          <React.Fragment>\r\n            <img\r\n              alt=\"warning\"\r\n              style={{ width: \"25%\", height: \"25%\" }}\r\n              src={warning}\r\n            />\r\n            <h5 className=\"text-center\">Link expired or invalid link</h5>\r\n          </React.Fragment>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmailResend;\r\n","import http from \"./httpService\";\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst emailVerifyResendEndPoint = baseUrl + \"/verify/send-email/account\";\r\n\r\nexport function emailVerifyResend(email) {\r\n  return http.post(emailVerifyResendEndPoint, email);\r\n}\r\n\r\nexport function emailVerify(userId, token) {\r\n  return http.get(`${baseUrl}/verify/email/${userId}/${token}`);\r\n}\r\n\r\nexport function emailLinkVerify(userId, token) {\r\n  return http.get(`${baseUrl}/verify/email-link/${userId}/${token}`);\r\n}\r\n","import EmailResend from \"./common/emailResend\";\r\nimport { emailVerifyResend } from \"../services/emailService\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useState } from \"react\";\r\n\r\nconst EmailVerifyResend = (props) => {\r\n  const [errors, setErrors] = useState(false);\r\n  const email = props.match.params.email;\r\n  const data = { email: email };\r\n\r\n  const resendLink = async () => {\r\n    try {\r\n      const result = await emailVerifyResend(data);\r\n      toast.success(result.data);\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400) {\r\n        setErrors(true);\r\n        toast.error(error.response.data);\r\n      }\r\n    }\r\n  };\r\n\r\n  return <EmailResend errors={errors} email={email} resendLink={resendLink} />;\r\n};\r\n\r\nexport default EmailVerifyResend;\r\n","import http from \"./httpService\";\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst resetEmailEndpoint = baseUrl + \"/verify/send-email/password-reset\";\r\n\r\nexport function resetEmail(email) {\r\n  return http.post(resetEmailEndpoint, email);\r\n}\r\n\r\nexport function passwordReset(userId, token, password) {\r\n  return http.post(\r\n    `${baseUrl}/verify/password-reset/${userId}/${token}`,\r\n    password\r\n  );\r\n}\r\n","import EmailResend from \"./common/emailResend\";\r\nimport { resetEmail } from \"../services/resetService\";\r\nimport { useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst ResetEmailResend = (props) => {\r\n  const [errors, setErrors] = useState(false);\r\n  const email = props.match.params.email;\r\n  const data = { email: email };\r\n\r\n  const resendLink = async () => {\r\n    try {\r\n      const result = await resetEmail(data);\r\n      toast.success(result.data);\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400) {\r\n        setErrors(true);\r\n        toast.error(error.response.data);\r\n      }\r\n    }\r\n  };\r\n\r\n  return <EmailResend errors={errors} email={email} resendLink={resendLink} />;\r\n};\r\n\r\nexport default ResetEmailResend;\r\n","import React, { Component } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { emailVerify } from \"../services/emailService\";\r\nimport checked from \"../assets/checked.svg\";\r\nimport warning from \"../assets/warning.svg\";\r\nimport \"../styles/form.css\";\r\n\r\nclass EmailVerify extends Component {\r\n  state = {\r\n    sucess: false,\r\n    errors: false,\r\n    userId: this.props.match.params.userId,\r\n    token: this.props.match.params.token,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { userId, token } = this.state;\r\n    try {\r\n      await emailVerify(userId, token);\r\n      this.setState({ sucess: true });\r\n    } catch (error) {\r\n      toast.error(error.response.data);\r\n      this.setState({ errors: true });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { errors, sucess } = this.state;\r\n\r\n    return (\r\n      <div style={{ marginTop: \"50px\" }} className=\"flex flex-column\">\r\n        <div\r\n          className=\"form-container flex flex-column\"\r\n          style={{ width: \"400px\", height: \"300px\" }}\r\n        >\r\n          {sucess && (\r\n            <React.Fragment>\r\n              <img\r\n                alt=\"checked\"\r\n                style={{ width: \"25%\", height: \"25%\" }}\r\n                src={checked}\r\n              />\r\n              <h2 className=\"text-center\">Thank You</h2>\r\n              <h5 className=\"text-center\" style={{ margin: \"0\" }}>\r\n                You have verified your email.\r\n              </h5>\r\n              <Button\r\n                onClick={() => (window.location = \"/\")}\r\n                style={{\r\n                  color: \"var(--blue)\",\r\n                  borderColor: \"var(--blue)\",\r\n                  width: \"200px\",\r\n                  margin: \"30px 0\",\r\n                }}\r\n                variant=\"outlined\"\r\n              >\r\n                continue\r\n              </Button>\r\n            </React.Fragment>\r\n          )}\r\n          {errors && (\r\n            <React.Fragment>\r\n              <img\r\n                alt=\"warning\"\r\n                style={{ width: \"25%\", height: \"25%\" }}\r\n                src={warning}\r\n              />\r\n              <h5 className=\"text-center\">Link expired or invalid link</h5>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmailVerify;\r\n","import { resetEmail } from \"../services/resetService\";\r\nimport Joi from \"joi\";\r\nimport Form from \"./common/form\";\r\nimport EmailOutlinedIcon from \"@material-ui/icons/EmailOutlined\";\r\nimport \"../styles/form.css\";\r\n\r\nclass ResetEmail extends Form {\r\n  state = { data: { email: \"\" }, errors: {} };\r\n\r\n  schema = {\r\n    email: Joi.string()\r\n      .min(3)\r\n      .max(250)\r\n      .required()\r\n      .email({ tlds: { allow: false } }),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const { data } = this.state;\r\n      await resetEmail({ email: data.email });\r\n      this.props.history.push(\r\n        `/api/verify/password-reset/resend-email/${data.email}`\r\n      );\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.email = error.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"flex flex-column\">\r\n        <h1 className=\"heading\">forgot password?</h1>\r\n        <form\r\n          onSubmit={this.handleSubmit}\r\n          className=\"form-container flex flex-column\"\r\n        >\r\n          {this.renderInput(\r\n            \"email\",\r\n            \"Email\",\r\n            <EmailOutlinedIcon />,\r\n            \"email\",\r\n            true\r\n          )}\r\n          {this.renderSubmitBtn(\"Submit\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResetEmail;\r\n","import React from \"react\";\r\nimport { emailLinkVerify } from \"../services/emailService\";\r\nimport { passwordReset } from \"../services/resetService\";\r\nimport { toast } from \"react-toastify\";\r\nimport Joi from \"joi\";\r\nimport Form from \"./common/form\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport warning from \"../assets/warning.svg\";\r\nimport \"../styles/form.css\";\r\n\r\nclass ResetVerify extends Form {\r\n  state = {\r\n    sucess: false,\r\n    error: false,\r\n    userId: this.props.match.params.userId,\r\n    token: this.props.match.params.token,\r\n    data: {\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    password: Joi.string().min(3).max(1000).required(),\r\n    confirmPassword: Joi.string().min(3).max(1000).required(),\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { userId, token } = this.state;\r\n    try {\r\n      await emailLinkVerify(userId, token);\r\n      this.setState({ sucess: true });\r\n    } catch (error) {\r\n      toast.error(\"Link expired or invalid link\");\r\n      this.setState({ error: true });\r\n    }\r\n  }\r\n\r\n  doSubmit = async () => {\r\n    const { data, userId, token } = this.state;\r\n    if (data.password !== data.confirmPassword) {\r\n      const errors = { ...this.state.errors };\r\n      errors.password = \"password does not match\";\r\n      errors.confirmPassword = \"password does not match\";\r\n      this.setState({ errors });\r\n      return;\r\n    }\r\n    try {\r\n      await passwordReset(userId, token, { password: data.password });\r\n      window.location = \"/\";\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400) {\r\n        this.setState({ error: true });\r\n        toast.error(error.response.data);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { sucess, error } = this.state;\r\n    return (\r\n      <div className=\"flex flex-column\">\r\n        {sucess && (\r\n          <React.Fragment>\r\n            {\" \"}\r\n            <h1 className=\"heading\">reset password</h1>\r\n            <form\r\n              onSubmit={this.handleSubmit}\r\n              className=\"form-container flex flex-column\"\r\n            >\r\n              {this.renderInput(\r\n                \"password\",\r\n                \"Password\",\r\n                <LockOutlinedIcon />,\r\n                \"password\",\r\n                true\r\n              )}\r\n              {this.renderInput(\r\n                \"confirmPassword\",\r\n                \"Confirm password\",\r\n                <LockOutlinedIcon />,\r\n                \"password\",\r\n                true\r\n              )}\r\n              {this.renderSubmitBtn(\"Submit\")}\r\n            </form>\r\n          </React.Fragment>\r\n        )}\r\n        {error && (\r\n          <React.Fragment>\r\n            <div\r\n              className=\"form-container flex flex-column\"\r\n              style={{ marginTop: \"50px\", width: \"400px\", height: \"300px\" }}\r\n            >\r\n              <img\r\n                alt=\"warning\"\r\n                style={{ width: \"25%\", height: \"25%\" }}\r\n                src={warning}\r\n              />\r\n              <h5 className=\"text-center\">Link expired or invalid link</h5>\r\n            </div>\r\n          </React.Fragment>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResetVerify;\r\n","import { Component } from \"react\";\r\nimport { logout } from \"../services/authService\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    logout();\r\n    window.location = \"/\";\r\n  }\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Home from \"./components/home\";\nimport Register from \"./components/register\";\nimport NotFound from \"./components/notFound\";\nimport Login from \"./components/login\";\nimport EmailVerifyResend from \"./components/emailVerifyResend\";\nimport ResetEmailResend from \"./components/resetEmailResend\";\nimport EmailVerify from \"./components/emailVerify\";\nimport ResetEmail from \"./components/resetEmail\";\nimport ResetVerify from \"./components/resetVerify\";\nimport Logout from \"./components/logout\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <React.Fragment>\n      <ToastContainer />\n      <Switch>\n        <Route exact path=\"/\" component={Home}></Route>\n        <Route exact path=\"/api/auth/register\" component={Register}></Route>\n        <Route exact path=\"/api/auth/login\" component={Login}></Route>\n        <Route exact path=\"/api/auth/logout\" component={Logout}></Route>\n        <Route\n          exact\n          path=\"/api/verify/send-email/password-reset\"\n          component={ResetEmail}\n        ></Route>\n        <Route\n          exact\n          path=\"/api/verify/account/email/:userId/:token\"\n          component={EmailVerify}\n        ></Route>\n        <Route\n          exact\n          path=\"/api/verify/account/resend-email/:email\"\n          component={EmailVerifyResend}\n        ></Route>\n        <Route\n          exact\n          path=\"/api/verify/password-reset/resend-email/:email\"\n          component={ResetEmailResend}\n        ></Route>\n        <Route\n          exact\n          path=\"/api/verify/password-reset/:userId/:token\"\n          component={ResetVerify}\n        ></Route>\n        <Route path=\"/not-found\" component={NotFound}></Route>\n        <Redirect to=\"/not-found\"></Redirect>\n      </Switch>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}